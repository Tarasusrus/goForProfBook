package main

import "runtime"  // Импортируем пакет runtime для доступа к функциям управления средой выполнения, включая сборщик мусора.

// Определяем структуру данных с двумя целочисленными полями.
type data struct {
	i, j int
}

func main() {
	// Определяем N, количество раз, которое мы хотим добавить элементы в наш срез.
	var N = 40000000

	// Создаем срез структур типа 'data'. В начале он пуст.
	var structure []data

	// Запускаем цикл, который N раз добавляет новую структуру в срез 'structure'.
	for i := 0; i < N; i++ {
		value := int(i)  // Преобразуем текущее значение i в целочисленный тип.
		structure = append(structure, data{value, value})  // Создаем новую структуру 'data' и добавляем ее в срез.
	}

	runtime.GC()  // Принудительно запускаем сборку мусора. В реальном приложении это обычно не рекомендуется.

	_ = structure[0]  // Обращаемся к первому элементу среза, чтобы компилятор не оптимизировал срез как неиспользуемый.
}

// real    0m2.478s
// user    0m0.767s
// sys     0m2.342s