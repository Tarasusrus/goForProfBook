package main

import (
	"fmt"
	"unsafe"  // Импорт пакета unsafe, который позволяет обходить типобезопасность в Go.
)

func main() {
    var value int64 = 5  // Объявление 64-битного целого числа со значением 5.
    var p1 = &value  // Создание указателя на переменную value (64-бит).
    // Преобразование указателя на 64-битное число в указатель на 32-битное.
    // Это опасная операция, поскольку она может привести к неопределенному поведению.
    var p2 = (*int32)(unsafe.Pointer(p1))

	fmt.Println("*p1: ", *p1)  // Выводит 5, значение value через указатель p1.
    fmt.Println("*p2: ", *p2)  // Выводит 5, младшие 32 бита числа value через указатель p2.

    *p1 = 5434123412312431212  // Присваивает value большое число, превышающее диапазон int32.
    fmt.Println(value)  // Выводит новое значение value.
    fmt.Println("*p2: ", *p2)  // Выводит младшие 32 бита нового числа.

    *p1 = 54341234  // Присваивает value число в пределах диапазона int32.
    fmt.Println(value)  // Выводит новое значение value.
    fmt.Println("*p2: ", *p2)  // Снова выводит младшие 32 бита нового числа.
}
